#!/usr/bin/env python
# -*-coding: utf8 -*-

########################################################################
# Copyright 2014 Concordia University
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
########################################################################
# This Python script is part of BinSourcerer, a framework
# for assembly to source code matching
#
# Status: Debug
#
########################################################################


#Offline Analyzer (OA), Windows function names and a brief description.
WinMalFuncInSight = {
    'accept':'The program may listen for incoming connections on a socket.',
    'AdjustTokenPrivileges':'The program may modify specific access privileges.',
    'AttachThreadInput':'The program may contain keylogging or spyware functionality.',
    'bind':'The program may listen for incoming connections.',
    'BitBlt':'The program may capture screenshots.',
    'CallNextHookEx':'The code calls the next hook in the chain set by SetWindowsHookEx.',
    'CertOpenSystemStore':'The program may access the certificates stored on the local system.',
    'CheckRemoteDebuggerPresent':'The code may contain an anti-debugging technique.',
    'CoCreateInstance':'The code creates a COM object.',
    'connect':'The program may connect to a remote command-and-control server.',
    'ConnectNamedPipe':'The code may create a server pipe for interprocess communication',
    'ControlService':'The code may start, stop, modify, or send a signal to a running service.',
    'CreateFile':'The program may create a new file or open an existing file.',
    'CreateFileMapping':'The code may read and modify PE files by creating handles to file mappings.',
    'CreateMutex':'Only one instance of the program runs on a system.',
    'CreateProcess':'The code may create and launch a new process.',
    'CreateRemoteThread':'The program may inject code into a different process.',
    'CreateService':'The program may create an autorun service or load kernel drivers.',
    'CreateToolhelp32Snapshot':'The code may create a snapshot of processes, heaps, threads, and modules.',
    'CryptAcquireContext':'The code may initialize the use of Windows encryption.',
    'DeviceIoControl':'The code may send control messages from user space to kernel space.',
    'DllCanUnloadNow':'The program implements a COM server. (Exported function)',
    'DllGetClassObject':'The program implements a COM server. (Exported function)',
    'DllInstall':'The program implements a COM server. (Exported function)',
    'DllRegisterServer':'The program implements a COM server. (Exported function)',
    'DllUnregisterServer':'The program implements a COM server. (Exported function)',
    'EnableExecuteProtectionSupport':'The code may modify the Data Execution Protection (DEP) settings of the host.',
    'EnumProcesses':'The code may enumerate through processes to find a process to inject into.',
    'EnumProcessModules':'The code may enumerate the loaded modules for injection.',
    'FindFirstFile':'The program may search through a directory and enumerate the filesystem.',
    'FindNextFile':'The program may search through a directory and enumerate the filesystem.',
    'FindResource':'The code may search for a resource in an executable or loaded DLL',
    'FindWindow':'The code searches for an open window on the desktop. (It may also contain anti-debugging)',
    'FtpPutFile':'The program may upload files to a remote FTP server.',
    'GetAdaptersInfo':'The code may obtain information about the MAC, network adapters on the system.',
    'GetAsyncKeyState':'The code may contain keylogger functionality.',
    'GetDC':'The code returns a handle to a device context for a window or the whole screen. (Screen Capture)',
    'GetForegroundWindow':'The code returns a handle to the window currently in the foreground of the desktop. (Keylogger)',
    'gethostbyname':'The code may perform a DNS lookup on a particular hostname. (C&C)',
    'gethostname':'The code may retrieve the hostname of the computer. (Backdoor)',
    'GetKeyState':'The code may obtain the status of a particular key on the keyboard. (Keylogger)',
    'GetModuleFilename':'The code may return the filename of a module that is loaded in the current process.',
    'GetModuleHandle':'The code may obtain a handle to an already loaded module. (Inject Code)',
    'GetProcAddress':'The code may retrieve the address of a function in a DLL loaded into memory.',
    'GetStartupInfo':'The code may get details about how the current process was configured to run',
    'GetSystemDefaultLangId':'The code may return the default language settings for the system.',
    'GetTempPath':'The code may return the temporary file path.',
    'GetThreadContext':'The code may read the context of a thread. (register values and current state)',
    'GetTickCount':'The code may retrieve the number of milliseconds since bootup. (Anti-debugging)',
    'GetVersionEx':'The code may return information about which version of Windows is currently running.',
    'GetWindowsDirectory':'The code may get the file path to the Windows directory.',
    'inet_addr':'The code may process IP addresses for network connectivity.',
    'InternetOpen':'The code may initialize the high-level Internet access functions from WinINet',
    'InternetOpenUrl':'The program may open a specific URL for a connection using FTP, HTTP, or HTTPS.',
    'InternetReadFile':'The program may read data from a previously opened URL.',
    'InternetWriteFile':'The program may write data to a previously opened URL.',
    'IsDebuggerPresent':'The code may check to see if the current process is being debugged. (Anti-debugging)',
    'IsNTAdmin':'The code checks if the user has administrator privileges.',
    'IsWoW64Process':'The code may check if it is running on a 64-bit operating system.',
    'LdrLoadDll':'The code uses a low-level function to load a DLL into a process and it may attempt to be stealthy.',
    'LoadLibrary':'The code loads a DLL into a process that may not have been loaded when the program started.',
    'LoadResource':'The code may load a resource from a PE file into memory.',
    'LsaEnumerateLogonSessions':'The code may enumerate through logon sessions on the current system.',
    'MapViewOfFile':'The code maps a file into memory and makes the contents of the file accessible via memory addresses.',
    'MapVirtualKey':'The code may translate a virtual-key code into a character value. (Keylogger)',
    'MmGetSystemRoutineAddress':'The code may retrieve the address of a function from another module. (Kernel code)',
    'Module32First':'The code may enumerate through modules loaded into a process. (Injector)',
    'Module32Next':'The code mya enumerate through modules loaded into a process. (Injector)',
    'NetScheduleJobAdd':'The code may submit a request for a program to be run at a specified date and time in the future.',
    'NetShareEnum':'The code may enumerate network shares.',
    'NtQueryDirectoryFile':'The code may get information about files in a directory. (Rootkit)',
    'NtQueryInformationProcess':'The code may return various information about a specified process. (Anti-debugging)',
    'NtSetInformationProcess':'The code may change the privilege level of a program or to bypass Data Execution Prevention (DEP).',
    'OleInitialize':'The code initialize the COM library.',
    'OpenMutex':'The code may open a handle to a mutual exclusion object to ensure that only a single instance is running.',
    'OpenProcess':'The code may open a handle to another process to read/write or to inject code.',
    'OpenSCManager':'The code may open a handle to the service control manager.',
    'OutputDebugString':'The code may output a string to a debugger if one is attached. (Anti-debugging)',
    'PeekNamedPipe':'The code may copy data from a named pipe without removing data from the pipe. (Reverse shell)',
    'Process32First':'The code may enumerate through processes to find a process to inject into.',
    'Process32Next':'The code may enumerate through processes to find a process to inject into.',
    'QueryPerformanceCounter':'The code may retrieve the value of the hardware-based performance counter. (Anti-debugging)',
    'QueueUserAPC':'The code may execute code for a different thread and inject code into another process.',
    'ReadProcessMemory':'The code may read the memory of a remote process.',
    'recv':'The code may receive data from a remote command-and-control server.',
    'RegisterHotKey':'The code may register a handler to be notified anytime a user enters a particular key combination.',
    'RegOpenKey':'The code may open a handle to a registry key for reading and editing.',
    'ResumeThread':'The code may resume a previously suspended thread for injection.',
    'RtlCreateRegistryKey':'The code may create a registry from kernel-mode code.',
    'RtlWriteRegistryValue':'The code may write a value to the registry from kernel-mode code.',
    'SamIConnect':'The code may connect to the Security Account Manager in order to make future calls that access credential information. (Hash-dumping)',
    'SamIGetPrivateData':'The code may query the private information about a specific user from the Security Account Manager (SAM) database. (Hash-dumping)',
    'SamQueryInformationUse':'The code may query information about a specific user in the Security Account Manager (SAM) database. (Hash-dumping)',
    'send':'The code may send data to a remote command-and-control server.',
    'SetFileTime':'The code may modify the creation/access/last modified time of a file.',
    'SetThreadContext':'The code may modify the context of a given thread for code injection.',
    'SetWindowsHookEx':'The code may set a hook function to be called whenever a certain event is called. (Keylogger)',
    'SfcTerminateWatcherThread':'The code may disable Windows file protection and modify the otherwise protected files.',
    'ShellExecute':'The code may execute another program and create a new process.',
    'StartServiceCtrlDispatcher':'The code may run as a service.',
    'SuspendThread':'The code may suspend a thread to modify it by performing code injection.',
    'system':'The code may run another program provided by some C runtime libraries. (wrapper function to CreateProcess.',
    'Thread32First':'The code may iterate through the threads of a process to find an appropriate thread to inject into.',
    'Thread32Next':'The code may iterate through the threads of a process to find an appropriate thread to inject into.',
    'Toolhelp32ReadProcessMemory':'The code may read the memory of a remote process.',
    'URLDownloadToFile':'The code may download a file from a web server and save it to disk.',
    'VirtualAllocEx':'The code may allocate memory in a remote process as part of process injection.',
    'VirtualProtectEx':'The code may change the protection on a region of memory from read-only to executable.',
    'WideCharToMultiByte':'The code may convert a Unicode string into an ASCII string.',
    'WinExec':'The code may execute another program by creating a new process.',
    'WlxLoggedOnSAS':'The code may perform Graphical Identification and Authentication (GINA) replacement.',
    'Wow64DisableWow64FsRedirection':'The code may disable file redirection that occurs in 32-bit files loaded on a 64-bit system.',
    'WriteProcessMemory':'The code may write data to a remote process as part of process injection.',
    'WSAStartup':'The code may initialize low-level network functionality.'
     }


#-----------------------------------------------------------------------
# Configuration agent
# The two next function are needed so the configuration manager will be
# able to provide configuration for this module.
# configurationNeed is called first. If no config for this 
# utility exists, user is prompted for utility configuration. If
# configuration exists, previous configs will be used. In all cases,
# configuration step is ended when configurationProvision
# is called with a configuration list as arg.
#-----------------------------------------------------------------------
def configurationNeed():
    return None #This utility does not need configuration
            
def configurationProvision(utilityConfig=[]):
    pass #This utility does not need configuration

#----------------------------------------------------------------------
# Plugin type
# Since many plugins with diferent capabilities can be integrated
# to the framework, we need a general method to understand the
# use of each plugin in a unified way. The value returned by this method
# will allow the framework to call the right operations on the plugin.
# for more information about plugin types, see related comment inside
# BSPluginManager.py
#----------------------------------------------------------------------
def identifyPluginType():
    return ["analyser"] 
    
#-----------------------------------------------------------------------
# Plugin name
# This is used so the framework can give a name to a specific plugin
# The name will be used to visualy identify each plugins.
#-----------------------------------------------------------------------
def identifyPlugin():
    return ["OfflineMalwareAndApiAnalyser", "Malware and API Tagging"] #First item in list have to have the same name as main class name. Second item in list is visual name
       
#-----------------------------------------------------------------------
# OfflineMalwareAndApiAnalyser
# This class implements offline malware and API analysis capabilities
# code inside this class almost comes directly from the old prototype
#-----------------------------------------------------------------------
class OfflineMalwareAndApiAnalyser():

    __repTAG = """<h3>Offline Malware and API Analyzer</h3><b>API Tags: </b> <font face="Courier New,Courier, monospace"> %s </font><br />"""
    __repOFL = """<b>Offline Analysis: </b> %s <br />"""

    def __init__(self, plMngr):
        self._manager = plMngr

   
    def pluginAnalyse(self, analyseList):
        htmlString = ""
        offlineA, self.__tag = self.offlineLookupList(analyseList)
        if offlineA:
            htmlString += (self.__repOFL% offlineA)
        if self.__tag:
            tpfd = { ne:self.__tag.count(ne) for ne in self.__tag }
            tpfl = tpfd.items()
            tpfs = ", ".join("%s(%s)" % tp for tp in tpfl)
            htmlString += (self.__repTAG% str(tpfs) )
            
        return htmlString

    def offlineLookupList(self, felist): #add a flag here to return a list and to save comments
        im=[]
        tg=[]
        oa_res1=""
        for ft in felist:
            if 'i' in ft:
                im.append(ft[1])
            if 't' in ft:
                tg.append(ft[1])
        for elmntz in self.remove_duplicates(im):
            if elmntz in WinMalFuncInSight:
                oa_res1=oa_res1+WinMalFuncInSight[elmntz]+"\n"
        return oa_res1, tg
     
    def remove_duplicates(self, inpLst):
        return list(set(inpLst))
     
#-----------------------------------------------------------------------
# __main__
# QA main for this module
#-----------------------------------------------------------------------
if __name__ == "__main__":

    x = OfflineMalwareAndApiAnalyser(None)


   
